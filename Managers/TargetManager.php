<?phpnamespace Managers;use PDO;use Models\TargetsModel;use PDOException;class TargetManager{    private $pdo;    public function __construct()    {        if (getenv('JAWSDB_URL') !== false) {            $dbparts = parse_url(getenv('JAWSDB_URL'));            $hostname = $dbparts['host'];            $username = $dbparts['user'];            $password = $dbparts['pass'];            $database = ltrim($dbparts['path'],'/');            try {                $this->setPdo(new PDO("mysql:host=$hostname;dbname=$database", $username, $password));            }catch (PDOException $e) {                echo 'Connected failed :' . $e->getMessage();            }        }else {            try {                $this->setPdo(new PDO('mysql:dbname=intelligence_agency;host=localhost', 'root', 'root'));            }catch (PDOException $e) {                echo 'Connected failed :' . $e->getMessage();            }        }    }    /**     * @return mixed     */    public function getPdo()    {        return $this->pdo;    }    /**     * @param mixed $pdo     */    public function setPdo($pdo): void    {        $this->pdo = $pdo;    }    public function create(TargetsModel $target) :bool    {        $missionManager = new MissionManager();        $codeNameMission = $missionManager->getData()[0];        $target_Mission = $codeNameMission;        $req = $this->pdo->prepare("INSERT INTO Targets      (codeName, firstname, lastname, nationality, dateOfBirth, localisation, target_Mission)    VALUES            (:codeName, :firstname, :lastname, :nationality, :dateOfBirth, :localisation, :target_Mission)");        $req->bindValue(':codeName', $target->getCodeName(), PDO::PARAM_STR);        $req->bindValue(':firstname', $target->getFirstname(), PDO::PARAM_STR);        $req->bindValue(':lastname', $target->getLastname(), PDO::PARAM_STR);        $req->bindValue(':nationality', $target->getNationality(), PDO::PARAM_STR);        $req->bindValue(':dateOfBirth', $target->getDateOfBirth(), PDO::PARAM_STR);        $req->bindValue(':localisation', $target->getLocalisation(), PDO::PARAM_STR);        $req->bindValue(':target_Mission', $target_Mission, PDO::PARAM_STR);        if ($req->execute()) {            return true;        }else {            return false;        }    }    public function uptdate(TargetsModel $target)    {        $req = $this->pdo->prepare('UPDATE     Targets SET     codeName = :codeName, firstname = :firstName, lastname = :lastName, nationality = :nationality, dateOfBirth = :dateOfBirth, localisation = :localisationWHERE codeName = :codeName    ');        $req->bindValue('codeName', $target->getCodeName(), PDO::PARAM_STR);        $req->bindValue('firstname', $target->getFirstname(), PDO::PARAM_STR);        $req->bindValue('lastname', $target->getLastname(), PDO::PARAM_STR);        $req->bindValue('nationality', $target->getNationality(), PDO::PARAM_STR);        $req->bindValue('dateOfBirth', $target->getDateOfBirth(), PDO::PARAM_STR);        $req->bindValue('localisation', $target->getLocalisation(), PDO::PARAM_STR);        $req->execute();    }    public function delete(string $codeName):bool    {        $req = $this->pdo->prepare('DELETE FROM Targets WHERE codeName = :codeName');        $req->bindValue(':codeName', $codeName, PDO::PARAM_STR);        if ($req->execute()) {            return true;        }else {            return false;        }    }    public function getByCodeName(string $codeName): TargetsModel    {        $codeName = (string)$codeName;        $req = $this->pdo->prepare('SELECT * FROM Targets WHERE codeName = :codeName');        $req->bindValue(':codeName', $codeName, PDO::PARAM_STR);        $data = $req->fetch();        return new TargetsModel($data);    }    public function getAll(): array    {        $req = $this->pdo->query('SELECT * FROM Targets ORDER BY codeName DESC ');        $target = array();        foreach ($req->fetchAll() as $data) {            $target[] = new TargetsModel($data);        }        return $target;    }}